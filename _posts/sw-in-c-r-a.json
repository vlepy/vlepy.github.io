{
  "date": "2018-10-10T20:00:00.000Z",
  "excerpt": "There are many alternatives, and something has to be the default.",
  "html": "<p>Spurred on by <a href=\"https://twitter.com/AdamRackis/status/1050176700150108160\">this Twitter thread</a>, I wanted to share some thoughts in a longer forum than Twitter would allow.</p>\n<p>Here's my thinking:</p>\n<p>These are all equally valid end-states, based on the tradeoffs that make sense for each developers' use case:</p>\n<p><code>1)</code> Precache HTML in a SW, and get the benefits of navigation being reliably fast.</p>\n<p><code>1a)</code> Use <code>skipWaiting: false</code> to ensure that precached assets are updated eventually, once all the existing tabs controlled by the old SW are closed. A recipe like <a href=\"https://developers.google.com/web/tools/workbox/guides/advanced-recipes#offer_a_page_reload_for_users\">this one</a>, which could ideally be added to <code>c-r-a</code>, can make this a better UX.</p>\n<p><code>1b)</code> Use <code>skipWaiting: true</code> to ensure that precached assets are updated immediately, with the understanding that this can mess up lazy-loading. (Maybe you already have fallback logic to deal with flaky lazy loading.)</p>\n<p><code>2)</code> Use a SW that doesn't precache your HTML, but potentially offers some other benefits, like runtime caching of subresources, or displays a custom &quot;you're offline&quot; web page.</p>\n<p><code>3)</code> Don't use a SW at all.</p>\n<p>Ideally developers would have the flexibility to choose which state to be in. The SW integration in <code>c-r-a</code> is tricky, because the configuration is (for obviously valid reasons) locked down to the points where choosing being those options is non-trivial. That makes it important to ship with the right default behavior, one that will strike a balance between providing benefits to the user with minimal negative side effects.</p>\n<p><code>c-r-a</code> v1 shipped with <code>1b)</code> by default, with the only &quot;escape hatch&quot; to change some runtime code and avoid registering a SW. In retrospect, that wasn't a great default.</p>\n<p><code>c-r-a</code> v2 shipped with <code>3)</code> by default, with developers who explicitly opt-in ending up in <code>1a)</code>. I think that's a saner/safer default, but it might not be the right fit for all developers.</p>\n<p><code>2)</code> is interesting, and I don't want to say that that kind of SW is inappropriate. It's just that it really requires a level of SW configuration that you can't default to in a locked-down environment like <code>c-r-a</code>.</p>\n<p>If developers <a href=\"https://github.com/facebook/create-react-app/issues/5359\">have the ability</a> to configure Workbox without needing to <code>eject</code>, I think they'll have the tools they need to choose any of those end states.</p>\n<p>I haven't done a great job of updating the <code>c-r-a</code> docs to explain all that, and that's on me to take care of. (Update: <a href=\"https://github.com/facebook/create-react-app/pull/5410\">here's a PR</a> that will hopefully help.)</p>\n",
  "layout": "default.njk",
  "tags": ["cra","post","web","workbox"],
  "title": "Service workers in create-react-app v2"
}
